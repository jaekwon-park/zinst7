#!/bin/bash

ZinstBaseRoot="/data"			#!/ Test include
zinst_log="/tmp/log.tmp"		#!/ Test include
echo "" > $zinst_log			#!/ Test include
ssh_port=22				#!/ Test include

Pass_Checker(){				#!/ Test include
source ./Pass_Checker			#!/ Test include
}					#!/ Test include

Parser_engine(){			#!/ Test include
	source ./Parser_engine		#!/ Test include
}					#!/ Test include

PackageAll=$@				#!/ Test include
Parser_engine $PackageAll		#!/ Test include

#########################################################################################
############################# zinst re-org engine start #################################
################################# Hostlist checker ######################################
RotaCommand=$@
szinst="zinst"
RotaBeacon=0
	if [[ $ZHosts != "" ]]
	then 
		Count=0
		Max=${#HostChanged[@]}
			while [[ $Count -lt $Max ]];
			do
				HostF=$WhoStamp@${HostChanged[$Count]}
				## ssh connection check
				$Comm_sshpass ssh -p $ssh_port -oStrictHostKeyChecking=no $HostF "grep ^VERSION /usr/bin/zinst" > $ZinstBaseRoot/vault/Source/ssh_conn_test.log 2>&1
				CheckConnection=`$sudo_base cat $ZinstBaseRoot/vault/Source/ssh_conn_test.log |grep "No route\|not known\|Connection refused"`
					if [[ $CheckConnection != "" ]]
					then
						echo $Barr	
						echo "It couldn't connect this host($HostF). Please check this hostname"
						echo $Barr	
					else
						## Install start with target host ##
						## Check the Package or Distribution server
						## Package scp to destination
						zinst_checkDes=`$sudo_base grep ^VERSION $ZinstBaseRoot/vault/Source/ssh_conn_test.log | sed -e 's/VERSION=//g' 2> $zinst_log`
							if [[ $zinst_checkDes != "" ]]
							then
								zinst_checkLoc=`$sudo_base cat /usr/bin/zinst 2> $zinst_log |grep ^VERSION | sed -e 's/VERSION=//g'`
									if [[ $(version_redefine "$zinst_checkDes") < $(version_redefine "$zinst_checkLoc") ]];
									then
										$Comm_sshpass scp -P $ssh_port /usr/bin/zinst $HostF:/usr/bin
									fi
							else
								$Comm_sshpass scp -P $ssh_port /usr/bin/zinst $HostF:/usr/bin/ 2> $zinst_log
							fi

						#### Check SSH command ########
							if [[ $CommandX = "ssh" ]]
							then
								RotaCommand=$MidPackageArry
								szinst=""
							fi

						CheckDesDIR=`$sudo_base grep " cannot access " $ZinstBaseRoot/vault/Source/ssh_conn_test.log`
							if [[ $CommandX != "" ]]
							then		
	        						$Comm_sshpass ssh -p $ssh_port -oStrictHostKeyChecking=no -t $HostF "$sudo_base mkdir -p $ZinstBaseRoot/vault/Source;sudo chgrp -R $zinst_group $ZinstBaseRoot/vault" 2> $zinst_log
							fi

        					echo ""
						## Delete temporary connection checker file
     						$sudo_base rm -f $ZinstBaseRoot/vault/Source/ssh_conn_test.log
						#### Local package scp to destination ####
						LocalPkg=`echo $RotaCommand | sed -e 's/^[a-z]* //g'`
						LocalPkg_Num=`echo $LocalPkg | awk '{print NF}'`

						CountSub=1
							while [[ $CountSub -le $LocalPkg_Num ]]
							do
								LocalRealPkg=`echo $LocalPkg | awk '{print $'$CountSub'}'`
									if [[ $CommandX = "^ssh$" ]]
									then
										LocalPkg_chk=`cd $PWD;ls |grep "^$LocalRealPkg"`
									fi

									if [[ $LocalPkg_chk != "" ]]
									then
										$Comm_sshpass scp -P $ssh_port $LocalRealPkg $HostF:$ZinstSourceDir/
									fi

								let CountSub=CountSub+1
							done;

							#### Check set command for destination work ########
							if [[ $RotaBeacon = 0 ]];then
								if [[ $CommandX = "set" ]]
								then
									RotaCommand=`echo $RotaCommand | sed -e 's/ \-set//1'`
									RotaBeacon=1
								fi
							fi

						MultiCheck=`echo $ZOptions |grep -e "-multi"`
							if [[ $MultiCheck = "" ]]
							then
								$Comm_sshpass ssh -p $ssh_port -oStrictHostKeyChecking=no -t $HostF "echo [ :: $HostF :: ];cd $ZinstSourceDir; source /etc/profile ;$szinst $RotaCommand" 2> $zinst_log
								IPaddr=`/sbin/ifconfig |grep " addr:" |grep Bcast |head -1 | awk '{print $2}'|awk  -F ':' '{print $2}'`
									if [[ $szinst = "" ]];then
										DestStamp="> SSH -"
									else
										DestStamp=" L"
									fi

 							    $Comm_sshpass ssh -p $ssh_port -oStrictHostKeyChecking=no -t $HostF "echo -e \"`date +%Y.%m.%d_%T`\t $WhoStamps : $DestStamp From $IPaddr: $szinst $RotaCommand\" >> $History_LOG" 
							else
								$Comm_sshpass ssh -p $ssh_port -oStrictHostKeyChecking=no -t $HostF "echo [ :: $HostF :: ];cd $ZinstSourceDir; source /etc/profile ;$szinst $RotaCommand" & 
							fi

					fi
				let Count=Count+1
			done
		exit 0;
	fi
